# Generated by Django 4.0 on 2022-02-27 08:42

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('AuthenticationApp', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Channel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Channel Name')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this channel should be treated as active. Unselect this instead of deleting channels.', verbose_name='Is active')),
                ('admin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Channel_Admin', to='AuthenticationApp.userprofile')),
                ('moderator', models.ManyToManyField(related_name='Moderator', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('name', 'admin')},
            },
        ),
        migrations.CreateModel(
            name='Media',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='postFiles/', verbose_name='File ')),
                ('file_type', models.CharField(default='image', max_length=5, verbose_name='File Type ')),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.TextField(verbose_name='Post text')),
                ('time', models.DateTimeField(auto_now=True)),
                ('media_count', models.PositiveSmallIntegerField(default=0, verbose_name='Media count')),
                ('is_hidden', models.BooleanField(default=False, help_text='Designates whether this post should be treated as hidden.Unselect this instead of deleting post.', verbose_name='Is Hidden')),
                ('posted_in', models.ManyToManyField(related_name='Post_Channel', to='Forum_App.Channel')),
            ],
        ),
        migrations.CreateModel(
            name='User_Post_Media',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('media', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Media', to='Forum_App.media')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Post', to='Forum_App.post')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='User', to='AuthenticationApp.userprofile')),
            ],
        ),
        migrations.CreateModel(
            name='Post_Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.TextField(verbose_name='Comment')),
                ('time', models.DateTimeField(auto_now=True)),
                ('is_hidden', models.BooleanField(default=False, help_text='Designates whether this comment should be treated as visible. Unselect this instead of deleting comment.', verbose_name='Is Hidden')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Commented_Post', to='Forum_App.post')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='User_Commented', to='AuthenticationApp.userprofile')),
            ],
        ),
        migrations.CreateModel(
            name='Post_Like',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(auto_now=True)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Liked_Post', to='Forum_App.post')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='User_liked', to='AuthenticationApp.userprofile')),
            ],
            options={
                'unique_together': {('user', 'post')},
            },
        ),
    ]
